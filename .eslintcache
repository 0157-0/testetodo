[{"C:\\todo\\react-todo-list\\src\\index.js":"1","C:\\todo\\react-todo-list\\src\\App.js":"2","C:\\todo\\react-todo-list\\src\\components\\TodoList.js":"3","C:\\todo\\react-todo-list\\src\\components\\TodoForm.js":"4","C:\\todo\\react-todo-list\\src\\components\\Todo.js":"5"},{"size":207,"mtime":1681232884832,"results":"6","hashOfConfig":"7"},{"size":224,"mtime":1681298377736,"results":"8","hashOfConfig":"7"},{"size":1973,"mtime":1681297659336,"results":"9","hashOfConfig":"7"},{"size":3060,"mtime":1681251078679,"results":"10","hashOfConfig":"7"},{"size":1623,"mtime":1681297730567,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1xa0g22",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\todo\\react-todo-list\\src\\index.js",[],["24","25"],"C:\\todo\\react-todo-list\\src\\App.js",[],"C:\\todo\\react-todo-list\\src\\components\\TodoList.js",["26"],"C:\\todo\\react-todo-list\\src\\components\\TodoForm.js",["27","28"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Card, Col, Row } from \"antd\";\r\n\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n  const [inputTwo, setInputTwo] = useState(props.edit ? props.edit.value : \"\");\r\n\r\n  const inputRef = useRef(null);\r\n  const inputRefTwo = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n  useEffect(() => {\r\n    inputRefTwo.current.focus();\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 1000),\r\n      text: input,\r\n      title: inputTwo,\r\n    });\r\n\r\n    console.log(input);\r\n\r\n    setInput(\"\");\r\n    setInputTwo(\"\");\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"e\", e)\r\n    setInput(e.target.value);\r\n  };\r\n\r\n\r\n  // ver aquele ...data: inputTwo :e.target.value\r\n  const handleChangeTitle = (e) => {\r\n    setInputTwo(e.target.value);\r\n  };\r\n  console.log(\"1\", input);\r\n  console.log(\"two\", inputTwo);\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      {props.edit ? (\r\n        <>\r\n          <Card bordered={false}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Atualizar item\"\r\n              value={input}\r\n              name=\"text\"\r\n              className=\"todo-input edit\"\r\n              onChange={handleChange}\r\n              ref={inputRef}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Atualizar item\"\r\n              value={inputTwo}\r\n              name=\"title\"\r\n              className=\"todo-input edit\"\r\n              onChange={handleChangeTitle}\r\n              ref={inputRefTwo}\r\n            />\r\n            <button onClick={handleSubmit} className=\"todo-button edit\">\r\n              Atualizar\r\n            </button>\r\n          </Card>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {/* <input\r\n                        type=\"text\"\r\n                        placeholder=\"Adicionar\"\r\n                        value={input}\r\n                        name=\"text\"\r\n                        className=\"todo-input\"\r\n                        onChange={handleChange}\r\n                        ref={inputRef}\r\n                    /> */}\r\n          <Card bordered={false}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Adicionar o tiulo\"\r\n              value={inputTwo}\r\n              name=\"title\"\r\n              className=\"todo-input\"\r\n              onChange={handleChangeTitle}\r\n              ref={inputRefTwo}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Adicionar\"\r\n              value={input}\r\n              name=\"text\"\r\n              className=\"todo-input\"\r\n              onChange={handleChange}\r\n              ref={inputRef}\r\n            />\r\n            <button onClick={handleSubmit} className=\"todo-button\">\r\n              Adicionar\r\n            </button>\r\n          </Card>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","C:\\todo\\react-todo-list\\src\\components\\Todo.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":53,"column":11,"nodeType":"35","messageId":"36","endLine":53,"endColumn":23},{"ruleId":"33","severity":1,"message":"37","line":2,"column":16,"nodeType":"35","messageId":"36","endLine":2,"endColumn":19},{"ruleId":"33","severity":1,"message":"38","line":2,"column":21,"nodeType":"35","messageId":"36","endLine":2,"endColumn":24},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'completeTodo' is assigned a value but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation"]